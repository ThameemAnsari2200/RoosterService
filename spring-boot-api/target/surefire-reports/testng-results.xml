<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="11857" started-at="2018-06-26T06:31:46Z" finished-at="2018-06-26T06:31:57Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="11857" started-at="2018-06-26T06:31:46Z" finished-at="2018-06-26T06:31:57Z">
      <class name="com.sg.example.SpringBootWebApplicationTests">
        <test-method status="PASS" signature="startReport()[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="startReport" is-config="true" duration-ms="680" started-at="2018-06-26T14:31:46Z" finished-at="2018-06-26T14:31:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="2" started-at="2018-06-26T14:31:46Z" finished-at="2018-06-26T14:31:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="10275" started-at="2018-06-26T14:31:46Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-06-26T14:31:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="3" started-at="2018-06-26T14:31:57Z" finished-at="2018-06-26T14:31:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.sg.example.SpringBootWebApplicationTests.testRoosterServiceFail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="testRoosterServiceFail()[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="testRoosterServiceFail" duration-ms="259" started-at="2018-06-26T14:31:57Z" finished-at="2018-06-26T14:31:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[JSON path "$.sounds"
Expected: is "kocoraco"
     but: was "cocorico"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: JSON path "$.sounds"
Expected: is "kocoraco"
     but: was "cocorico"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.util.JsonPathExpectationsHelper.assertValue(JsonPathExpectationsHelper.java:74)
	at org.springframework.test.web.servlet.result.JsonPathResultMatchers$1.match(JsonPathResultMatchers.java:86)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)
	at com.sg.example.SpringBootWebApplicationTests.testRoosterServiceFail(SpringBootWebApplicationTests.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:129)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:113)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoosterServiceFail -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="getResult" is-config="true" duration-ms="14" started-at="2018-06-26T14:31:57Z" finished-at="2018-06-26T14:31:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRoosterServiceFail status=FAILURE method=SpringBootWebApplicationTests.testRoosterServiceFail()[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-26T14:31:57Z" finished-at="2018-06-26T14:31:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.sg.example.SpringBootWebApplicationTests.testRoosterServiceFail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-06-26T14:31:57Z" finished-at="2018-06-26T14:31:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.sg.example.SpringBootWebApplicationTests.testRoosterServicePass() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRoosterServicePass()[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="testRoosterServicePass" duration-ms="16" started-at="2018-06-26T14:31:57Z" finished-at="2018-06-26T14:31:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoosterServicePass -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="getResult" is-config="true" duration-ms="1" started-at="2018-06-26T14:31:57Z" finished-at="2018-06-26T14:31:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRoosterServicePass status=SUCCESS method=SpringBootWebApplicationTests.testRoosterServicePass()[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-06-26T14:31:57Z" finished-at="2018-06-26T14:31:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.sg.example.SpringBootWebApplicationTests.testRoosterServicePass() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-06-26T14:31:57Z" finished-at="2018-06-26T14:31:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.sg.example.SpringBootWebApplicationTests@72f926e6]" name="tearDown" is-config="true" duration-ms="584" started-at="2018-06-26T14:31:57Z" finished-at="2018-06-26T14:31:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.sg.example.SpringBootWebApplicationTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
